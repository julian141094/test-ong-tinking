<!DOCTYPE html><html lang="en"><head><link rel="icon" type="image/png" href="/favicon.png"/><link rel="manifest" href="/manifest.json"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes"/><meta name="theme-color" content="#da936a"/><meta name="author" content="styled-components"/><style>
  *,::after,::before{background-repeat:no-repeat;box-sizing:inherit}::after,::before{text-decoration:inherit;vertical-align:inherit}html{box-sizing:border-box;cursor:default;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,footer,header,nav,section{display:block}body{margin:0}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}nav ol,nav ul{list-style:none}pre{font-family:monospace,monospace;font-size:1em}a{text-decoration:none;color:inherit;background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}table{border-collapse:collapse}button,input,optgroup,select,textarea{margin:0}button,input,select,textarea{background-color:transparent;color:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[tabindex],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}[hidden]{display:none}[aria-busy=true]{cursor:progress}[aria-controls]{cursor:pointer}[aria-hidden=false][hidden]:not(:focus){clip:rect(0,0,0,0);display:inherit;position:absolute}[aria-disabled]{cursor:default}

  .prism-code {
    display: block;
    white-space: pre;
    background-color: #1D1F21;
    color: #C5C8C6;
    padding: 0.5rem;
    margin: 0;
    box-sizing: border-box;
    vertical-align: baseline;
    outline: none;
    text-shadow: none;
    -webkit-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
    word-wrap: normal;
    word-break: normal;
    text-align: left;
    word-spacing: normal;
    -moz-tab-size: 2;
    -o-tab-size: 2;
    tab-size: 2;
  }
  .token.comment,
  .token.prolog,
  .token.doctype,
  .token.cdata {
    color: hsl(30, 20%, 50%);
  }
  .token.comment {
    font-style: italic;
  }
  .token.punctuation {
    opacity: .7;
  }
  .namespace {
    opacity: .7;
  }
  .token.property,
  .token.tag,
  .token.boolean,
  .token.number,
  .token.constant,
  .token.symbol {
    color: hsl(350, 40%, 70%);
  }
  .token.selector,
  .token.attr-name,
  .token.string,
  .token.char,
  .token.builtin,
  .token.inserted {
    color: hsl(75, 70%, 60%);
  }
  .token.operator,
  .token.entity,
  .token.url,
  .language-css .token.string,
  .style .token.string,
  .token.variable {
    color: hsl(40, 90%, 60%);
  }
  .token.atrule,
  .token.attr-value,
  .token.keyword {
    color: hsl(350, 40%, 70%);
  }
  .token.regex,
  .token.important {
    color: #e90;
  }
  .token.important,
  .token.bold {
    font-weight: bold;
  }
  .token.italic {
    font-style: italic;
  }
  .token.entity {
    cursor: help;
  }
  .token.deleted {
    color: red;
  }

  html, body {
    font-size: 18px;
    line-height: 1.6;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    font-style: normal;
    padding: 0;
    margin: 0;
    color: rgb(46, 68, 78);

    -webkit-font-smoothing: subpixel-antialiased;
  }

  body.sticky {
    overflow: hidden;
  }

  .root {
    position: relative;
    overflow: auto;
  }

  .small {
    color: white;
    font-size: 0.5em;
  }

  .big {
    color: white;
    font-size: 1.4em;
  }

  ul, ol {
    padding-left: 0;
  }

  ul ul, ul ol, ol ol, ol ul {
    padding-left: 1.5em;
  }

  ul li, ol li {
    margin-bottom: 0.75em;
    line-height: 1.6;
  }

  @media all and (max-width: 1000px) {
    html, body {
      font-size: 16px;
    }

    li {
      list-style-position: outside;
      margin-left: 1em;
    }
  }
</style><style data-styled="" data-styled-version="5.2.1">.icKMIl{display:inline-block;font-family:dm,monospace;font-size:90%;line-height:1.4;-webkit-text-decoration:inherit;text-decoration:inherit;vertical-align:baseline;}/*!sc*/
data-styled.g1[id="Code-sc-1gu2r1r-0"]{content:"icKMIl,"}/*!sc*/
.boujzf{box-shadow:0.05555555555555555rem 0.05555555555555555rem 1.1111111111111112rem rgba(20,20,20,0.27);overflow:hidden;margin:1.9444444444444444rem 0;text-align:left;}/*!sc*/
data-styled.g2[id="LiveEdit__StyledProvider-sc-98ci5q-0"]{content:"boujzf,"}/*!sc*/
.hcTuFK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;}/*!sc*/
@media (max-width:40.625em){.hcTuFK{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}}/*!sc*/
data-styled.g3[id="LiveEdit__Row-sc-98ci5q-1"]{content:"hcTuFK,"}/*!sc*/
.dRKGpi{-webkit-flex-basis:50%;-ms-flex-preferred-size:50%;flex-basis:50%;width:50%;max-width:50%;}/*!sc*/
@media (max-width:40.625em){.dRKGpi{-webkit-flex-basis:auto;-ms-flex-preferred-size:auto;flex-basis:auto;width:100%;max-width:100%;height:auto;}}/*!sc*/
data-styled.g4[id="LiveEdit__Code-sc-98ci5q-2"]{content:"dRKGpi,"}/*!sc*/
.blaelo{background:#1d1f27;font-size:0.8rem;font-family:dm,monospace;font-weight:300;min-height:22.22222222222222rem;overflow-y:auto !important;overflow-x:hidden;cursor:text;white-space:pre-wrap;position:relative;}/*!sc*/
data-styled.g5[id="LiveEdit__StyledEditor-sc-98ci5q-3"]{content:"blaelo,"}/*!sc*/
.byNFjc{position:relative;padding:0.5rem;background:white;color:black;height:auto;overflow:hidden;white-space:normal;-webkit-flex-basis:50%;-ms-flex-preferred-size:50%;flex-basis:50%;width:50%;max-width:50%;}/*!sc*/
@media (max-width:40.625em){.byNFjc{-webkit-flex-basis:auto;-ms-flex-preferred-size:auto;flex-basis:auto;width:100%;max-width:100%;height:auto;}}/*!sc*/
data-styled.g6[id="LiveEdit__StyledPreview-sc-98ci5q-4"]{content:"byNFjc,"}/*!sc*/
.itzLmv{display:block;width:100%;padding:0.4444444444444444rem;background:#ff5555;color:white;font-size:0.8rem;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";white-space:pre;}/*!sc*/
data-styled.g7[id="LiveEdit__StyledError-sc-98ci5q-5"]{content:"itzLmv,"}/*!sc*/
.hCdnWm{padding-left:16.666666666666668rem;}/*!sc*/
@media (max-width:62.5em){.hCdnWm{padding-left:0;}}/*!sc*/
data-styled.g8[id="Layout__Container-sc-1s1pjfp-0"]{content:"hCdnWm,"}/*!sc*/
.iQlamx{width:56.888888888888886rem;max-width:100%;margin:0 auto;padding:5rem 2.2222222222222223rem 0 2.2222222222222223rem;box-sizing:border-box;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";-webkit-transition:-webkit-transform 150ms ease-out;-webkit-transition:transform 150ms ease-out;transition:transform 150ms ease-out;}/*!sc*/
@media (max-width:62.5em){.iQlamx{padding:5.555555555555555rem 1.1111111111111112rem 1.6666666666666667rem 1.1111111111111112rem;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}}/*!sc*/
data-styled.g9[id="Layout__Content-sc-1s1pjfp-1"]{content:"iQlamx,"}/*!sc*/
.dbvFQH{display:block;text-align:left;width:100%;color:rgb(66,66,66);font-size:2.3333333333333335rem;font-weight:bold;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";}/*!sc*/
data-styled.g10[id="Layout__Title-sc-1s1pjfp-2"]{content:"dbvFQH,"}/*!sc*/
.hqEMEp{font-size:1.7777777777777777rem;font-weight:600;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";margin:2em 0 0.75em;}/*!sc*/
data-styled.g11[id="Layout__Header-sc-1s1pjfp-3"]{content:"hqEMEp,"}/*!sc*/
.bfNrKe{display:block;margin:2em 0 0.75em;font-size:1.3333333333333333rem;font-weight:600;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";}/*!sc*/
data-styled.g12[id="Layout__SubHeader-sc-1s1pjfp-4"]{content:"bfNrKe,"}/*!sc*/
.eXFZrN{font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";background:#e0e0e0;padding:0.3888888888888889rem 0.5555555555555556rem 0.2777777777777778rem 0.7777777777777778rem;border-left:0.2222222222222222rem solid rgb(33,33,33);margin:2.5rem 0;border-radius:0.16666666666666666rem;}/*!sc*/
.eXFZrN > p{margin:0 0 0.2777777777777778rem 0;}/*!sc*/
.Layout__SubHeader-sc-1s1pjfp-4 + .Note-sc-1bk2sh4-0,.Layout__Title-sc-1s1pjfp-2 + .eXFZrN{margin-top:1.9444444444444444rem;}/*!sc*/
data-styled.g14[id="Note-sc-1bk2sh4-0"]{content:"eXFZrN,"}/*!sc*/
.gQVaEe{display:block;font-weight:600;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";text-transform:uppercase;font-size:90%;margin-bottom:0.3888888888888889rem;}/*!sc*/
data-styled.g15[id="Note__NoteLabel-sc-1bk2sh4-1"]{content:"gQVaEe,"}/*!sc*/
.bHCJrj{background:#1d1f27;font-size:0.8rem;font-family:dm,monospace;font-weight:300;white-space:pre-wrap;border-radius:0.16666666666666666rem;box-shadow:1px 1px 20px rgba(20,20,20,0.27);margin:1.9444444444444444rem 0;overflow-x:hidden;}/*!sc*/
.Note-sc-1bk2sh4-0 .CodeBlock-sc-1qhv3lv-0{margin:1.1111111111111112rem 0;}/*!sc*/
data-styled.g16[id="CodeBlock-sc-1qhv3lv-0"]{content:"bHCJrj,"}/*!sc*/
.caWOOv{display:inline-block;color:inherit;cursor:pointer;padding:0.1111111111111111rem 0.4444444444444444rem;margin:-0.1111111111111111rem -0.4444444444444444rem;}/*!sc*/
@media (min-width:62.5em){.caWOOv{border-radius:0.16666666666666666rem;}.caWOOv:hover{background:rgba(20,20,20,0.1);}}/*!sc*/
data-styled.g17[id="Link__StyledLink-cnbpkq-0"]{content:"caWOOv,"}/*!sc*/
.jFBmCj{color:rgb(33,33,33);cursor:pointer;-webkit-text-decoration:underline;text-decoration:underline;}/*!sc*/
.jFBmCj:hover{color:#ff5555;}/*!sc*/
data-styled.g18[id="Link__InlineLink-cnbpkq-1"]{content:"jFBmCj,"}/*!sc*/
.jZGNBW{display:inline-block;vertical-align:middle;overflow:hidden;}/*!sc*/
data-styled.g19[id="StyledIconBase-ea9ulj-0"]{content:"jZGNBW,"}/*!sc*/
.gHaVGF{position:relative;display:block;visibility:hidden;height:0;top:-3.888888888888889rem;}/*!sc*/
@media (max-width:62.5em){.gHaVGF{top:-5rem;}}/*!sc*/
data-styled.g20[id="Anchor__InvisibleAnchor-sc-1n6vku9-0"]{content:"gHaVGF,"}/*!sc*/
.btUpWo{display:none;color:inherit;margin-left:0.5555555555555556rem;}/*!sc*/
data-styled.g21[id="Anchor-sc-1n6vku9-1"]{content:"btUpWo,"}/*!sc*/
.fRHJnB{width:1.1111111111111112rem;opacity:0.7;margin-top:-0.2777777777777778rem;}/*!sc*/
.fRHJnB:hover{opacity:0.9;}/*!sc*/
data-styled.g22[id="Anchor__AnchorIcon-sc-1n6vku9-2"]{content:"fRHJnB,"}/*!sc*/
.dsUzWQ{position:relative;}/*!sc*/
@media (max-width:62.5em){.dsUzWQ .Anchor-sc-1n6vku9-1{display:inline-block;}}/*!sc*/
.dsUzWQ:hover .Anchor-sc-1n6vku9-1{display:inline-block;}/*!sc*/
data-styled.g23[id="Anchor__AnchorHeader-sc-1n6vku9-3"]{content:"dsUzWQ,"}/*!sc*/
.dfWsiH{display:inline-block;margin-left:0.5rem;position:relative;bottom:0.16666666666666666rem;}/*!sc*/
data-styled.g24[id="Label__LabelGroup-sc-1ycyyhc-0"]{content:"dfWsiH,"}/*!sc*/
.jyYMCt{display:inline-block;background:cornflowerblue;color:white;font-size:0.75rem;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";border-radius:0.16666666666666666rem;padding:0.05555555555555555rem 0.2777777777777778rem;vertical-align:middle;}/*!sc*/
data-styled.g25[id="Label-sc-1ycyyhc-1"]{content:"jyYMCt,"}/*!sc*/
.jzuIdj{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:0.2777777777777778rem;height:0.2777777777777778rem;margin:0 0.8333333333333334rem;border-radius:50%;background:currentColor;opacity:0.35;}/*!sc*/
data-styled.g26[id="NavSeparator-sc-1afez1g-0"]{content:"jzuIdj,"}/*!sc*/
.jasrud{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;margin-right:1.6666666666666667rem;}/*!sc*/
data-styled.g27[id="NavLinks__Wrapper-sc-82sbtk-0"]{content:"jasrud,"}/*!sc*/
.cFWOAa{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;display:inline-block;line-height:2.7777777777777777rem;-webkit-transition:opacity 0.2s,-webkit-transform 0.2s;-webkit-transition:opacity 0.2s,transform 0.2s;transition:opacity 0.2s,transform 0.2s;cursor:pointer;-webkit-letter-spacing:0.022222222222222223rem;-moz-letter-spacing:0.022222222222222223rem;-ms-letter-spacing:0.022222222222222223rem;letter-spacing:0.022222222222222223rem;color:currentColor;}/*!sc*/
.cFWOAa:hover,.cFWOAa:focus{opacity:0.8;}/*!sc*/
.cFWOAa:active{-webkit-transform:scale(0.95);-ms-transform:scale(0.95);transform:scale(0.95);opacity:0.6;}/*!sc*/
data-styled.g28[id="NavLinks__NavLink-sc-82sbtk-1"]{content:"cFWOAa,"}/*!sc*/
.Tsuea{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;}/*!sc*/
data-styled.g29[id="Social__Wrapper-sc-4j9mhd-0"]{content:"Tsuea,"}/*!sc*/
.gfiIoH{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-right:1.1111111111111112rem;line-height:2.7777777777777777rem;-webkit-transition:opacity 0.2s,-webkit-transform 0.2s;-webkit-transition:opacity 0.2s,transform 0.2s;transition:opacity 0.2s,transform 0.2s;cursor:pointer;}/*!sc*/
.gfiIoH:last-child{margin-right:0;}/*!sc*/
.gfiIoH:hover,.gfiIoH:focus{opacity:0.8;}/*!sc*/
.gfiIoH:active{-webkit-transform:scale(0.95);-ms-transform:scale(0.95);transform:scale(0.95);opacity:0.6;}/*!sc*/
.gfiIoH svg path{fill:currentColor;}/*!sc*/
data-styled.g30[id="Social__SocialLink-sc-4j9mhd-1"]{content:"gfiIoH,"}/*!sc*/
.dyhrHD{width:0.7777777777777778rem;height:0.7777777777777778rem;}/*!sc*/
data-styled.g31[id="Social__Svg-sc-4j9mhd-2"]{content:"dyhrHD,"}/*!sc*/
.cdsIpE.cdsIpE{width:NaNrem;height:1rem;}/*!sc*/
data-styled.g32[id="Social__StyledIcon-sc-4j9mhd-3"]{content:"cdsIpE,"}/*!sc*/
.dyJgcB{display:inline-block;vertical-align:middle;box-sizing:border-box;background-position:center;background-size:contain;background-image:url(/nav-logo.png);width:9.11111111111111rem;height:2.2222222222222223rem;}/*!sc*/
.cFIVVX{display:inline-block;vertical-align:middle;box-sizing:border-box;background-position:center;background-size:contain;background-image:url(/icon.png);width:5.555555555555555rem;height:1.6666666666666667rem;}/*!sc*/
data-styled.g33[id="Logo-sc-1wiu9k4-0"]{content:"dyJgcB,cFIVVX,"}/*!sc*/
.eUonps svg{display:inline-block;}/*!sc*/
.eUonps svg path{fill:currentColor;}/*!sc*/
data-styled.g34[id="NavIcons__Svg-gjgetu-0"]{content:"eUonps,"}/*!sc*/
.bdBNrl{background:none;outline:none;border:none;background:none;cursor:pointer;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;height:2.7777777777777777rem;padding:0 0.5555555555555556rem;text-align:center;vertical-align:middle;}/*!sc*/
.NavButton-bbdxin-0 + .NavButton-bbdxin-0{padding-left:0;}/*!sc*/
data-styled.g35[id="NavButton-bbdxin-0"]{content:"bdBNrl,"}/*!sc*/
.iVhfQK{display:none;}/*!sc*/
@media (max-width:62.5em){.iVhfQK{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;height:2.7777777777777777rem;}}/*!sc*/
data-styled.g36[id="MobileNavbar__Wrapper-sc-1mwg5kk-0"]{content:"iVhfQK,"}/*!sc*/
.fJIdWQ{position:absolute;top:2.7777777777777777rem;left:0;right:0;height:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:0 1.1111111111111112rem;-webkit-transition:height 0.1s;transition:height 0.1s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-overflow-scrolling:touch;overflow-x:scroll;overflow-y:hidden;background:#efefef;color:#868686;}/*!sc*/
data-styled.g37[id="MobileNavbar__SecondaryMenu-sc-1mwg5kk-1"]{content:"fJIdWQ,"}/*!sc*/
.efrxpQ{display:inline-block;vertical-align:center;}/*!sc*/
data-styled.g38[id="MobileNavbar__LogoLink-sc-1mwg5kk-2"]{content:"efrxpQ,"}/*!sc*/
.jRmDWN{-webkit-transition:-webkit-transform 0.2s;-webkit-transition:transform 0.2s;transition:transform 0.2s;}/*!sc*/
data-styled.g39[id="MobileNavbar__ArrowWrapper-sc-1mwg5kk-3"]{content:"jRmDWN,"}/*!sc*/
.ktULex{padding-right:1.1111111111111112rem;}/*!sc*/
data-styled.g40[id="MobileNavbar__SecondaryMenuItem-sc-1mwg5kk-4"]{content:"ktULex,"}/*!sc*/
.feDnqa.feDnqa{width:1.5555555555555556rem;height:1.5555555555555556rem;}/*!sc*/
.evbhwi.evbhwi{width:2rem;height:2rem;}/*!sc*/
data-styled.g41[id="MobileNavbar__StyledIcon-sc-1mwg5kk-5"]{content:"feDnqa,evbhwi,"}/*!sc*/
.gjDUjY{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;}/*!sc*/
@media (max-width:62.5em){.gjDUjY{display:block;padding:0;}.gjDUjY span.algolia-autocomplete{display:block !important;}.gjDUjY span.ds-dropdown-menu::before{display:none;}}/*!sc*/
data-styled.g43[id="Search__Wrapper-sc-1u91ay0-1"]{content:"gjDUjY,"}/*!sc*/
.gxNjci{background:none;outline:none;border:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;width:7.222222222222222rem;line-height:1.6666666666666667rem;font-size:0.8333333333333334rem;color:currentColor;}/*!sc*/
.gxNjci::-webkit-input-placeholder{color:currentColor;opacity:0.5;-webkit-transition:opacity 0.2s ease-in-out;transition:opacity 0.2s ease-in-out;}/*!sc*/
.gxNjci::-moz-placeholder{color:currentColor;opacity:0.5;-webkit-transition:opacity 0.2s ease-in-out;transition:opacity 0.2s ease-in-out;}/*!sc*/
.gxNjci:-ms-input-placeholder{color:currentColor;opacity:0.5;-webkit-transition:opacity 0.2s ease-in-out;transition:opacity 0.2s ease-in-out;}/*!sc*/
.gxNjci::placeholder{color:currentColor;opacity:0.5;-webkit-transition:opacity 0.2s ease-in-out;transition:opacity 0.2s ease-in-out;}/*!sc*/
.gxNjci:focus::-webkit-input-placeholder{opacity:0.8;}/*!sc*/
.gxNjci:focus::-moz-placeholder{opacity:0.8;}/*!sc*/
.gxNjci:focus:-ms-input-placeholder{opacity:0.8;}/*!sc*/
.gxNjci:focus::placeholder{opacity:0.8;}/*!sc*/
@media (max-width:62.5em){.gxNjci{padding:0.5555555555555556rem 2.6666666666666665rem;display:block;width:100%;background:rgb(33,33,33);color:white;}}/*!sc*/
data-styled.g44[id="Search__Input-sc-1u91ay0-2"]{content:"gxNjci,"}/*!sc*/
.cQDWKr{background:none;outline:none;border:none;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background:none;outline:none;border:none;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;margin-right:0.2222222222222222rem;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}/*!sc*/
.cQDWKr:hover,.cQDWKr:focus{opacity:0.7;-webkit-filter:drop-shadow(0 1px 2px rgba(0,0,0,0.2));filter:drop-shadow(0 1px 2px rgba(0,0,0,0.2));}/*!sc*/
.cQDWKr:active{background:rgba(0,0,0,0.1);}/*!sc*/
.cQDWKr .Search__StyledSearchIcon-sc-1u91ay0-0{width:1.4444444444444444rem;height:1.4444444444444444rem;}/*!sc*/
@media (max-width:62.5em){.cQDWKr{position:absolute;top:0.5rem;left:0.5555555555555556rem;height:1.7777777777777777rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:1.7777777777777777rem;z-index:1;background:none;color:white;}}/*!sc*/
data-styled.g45[id="Search__Button-sc-1u91ay0-3"]{content:"cQDWKr,"}/*!sc*/
.algolia-autocomplete .ds-dropdown-menu .ds-suggestion .algolia-docsearch-suggestion--content{width:100% !important;}/*!sc*/
.algolia-autocomplete .ds-dropdown-menu .ds-suggestion .algolia-docsearch-suggestion--content::before{content:none;}/*!sc*/
.algolia-autocomplete .ds-dropdown-menu .ds-suggestion.ds-cursor .algolia-docsearch-suggestion--content{background:#e0e0e0 !important;}/*!sc*/
.algolia-autocomplete .algolia-docsearch-suggestion--category-header{color:#1d1f27;}/*!sc*/
.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column{display:none !important;}/*!sc*/
.algolia-autocomplete .algolia-docsearch-suggestion--title{font-weight:bold;color:black;}/*!sc*/
.algolia-autocomplete .algolia-docsearch-suggestion--text{color:#282a36;}/*!sc*/
.algolia-autocomplete .algolia-docsearch-suggestion--highlight{box-shadow:none !important;color:rgb(33,33,33) !important;background:transparent !important;}/*!sc*/
.algolia-autocomplete .ds-dropdown-menu{margin-top:0;}/*!sc*/
.algolia-autocomplete .ds-dropdown-menu > *:first-child{border:0;}/*!sc*/
data-styled.g46[id="sc-global-gpnkGo1"]{content:"sc-global-gpnkGo1,"}/*!sc*/
.jeGZFY{position:fixed;left:0;box-sizing:border-box;z-index:3;width:100%;height:2.7777777777777777rem;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";font-size:0.8333333333333334rem;font-weight:500;background:rgb(33,33,33);-webkit-transition:background 300ms ease-out;transition:background 300ms ease-out;color:white;padding:0;}/*!sc*/
data-styled.g47[id="Navbar__Wrapper-sc-1mplyxk-0"]{content:"jeGZFY,"}/*!sc*/
.hjEa-ds{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}/*!sc*/
data-styled.g48[id="Navbar__StartWrapper-sc-1mplyxk-1"]{content:"hjEa-ds,"}/*!sc*/
.bEBjcQ{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;}/*!sc*/
data-styled.g49[id="Navbar__EndWrapper-sc-1mplyxk-2"]{content:"bEBjcQ,"}/*!sc*/
.flNfQR{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 1.1111111111111112rem;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}/*!sc*/
@media (max-width:62.5em){.flNfQR .Navbar__StartWrapper-sc-1mplyxk-1,.flNfQR .Navbar__EndWrapper-sc-1mplyxk-2 .Navbar__StyledSocial-sc-1mplyxk-3{display:none;}}/*!sc*/
data-styled.g51[id="Navbar__NormalNavbar-sc-1mplyxk-4"]{content:"flNfQR,"}/*!sc*/
.saBtW{width:1.4444444444444444rem;height:1.4444444444444444rem;color:white;}/*!sc*/
data-styled.g52[id="Navbar__StyledModalCloseIcon-sc-1mplyxk-5"]{content:"saBtW,"}/*!sc*/
@media (max-width:62.5em){.fFiSHC{background:currentColor;overflow:auto;position:absolute;top:0;left:0;right:0;}}/*!sc*/
data-styled.g53[id="Navbar__AlgoliaModal-sc-1mplyxk-6"]{content:"fFiSHC,"}/*!sc*/
.ifmAAj{display:none;color:currentColor;}/*!sc*/
@media (max-width:62.5em){.ifmAAj{display:none;}.ifmAAj button{cursor:pointer;padding:0;position:fixed;right:0.5555555555555556rem;top:0.6111111111111112rem;border:none;z-index:2;}}/*!sc*/
data-styled.g54[id="Navbar__AlgoliaModalHeader-sc-1mplyxk-7"]{content:"ifmAAj,"}/*!sc*/
.gyIwfZ{margin-right:0.5555555555555556rem;}/*!sc*/
@media (max-width:62.5em){.gyIwfZ{position:fixed;top:0;bottom:0;left:0;right:0;z-index:1;left:0;display:none;background:#efefef;overflow-y:auto;margin:0;}.gyIwfZ .algolia-autocomplete .ds-dropdown-menu{position:static !important;display:block;max-width:100%;min-width:0;}}/*!sc*/
data-styled.g55[id="Navbar__AlgoliaModalOverlay-sc-1mplyxk-8"]{content:"gyIwfZ,"}/*!sc*/
.kMuYHQ{display:inline-block;vertical-align:center;margin-right:1.9444444444444444rem;}/*!sc*/
data-styled.g56[id="Navbar__LogoLink-sc-1mplyxk-9"]{content:"kMuYHQ,"}/*!sc*/
.bJUXUK{position:fixed;-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);display:block;z-index:1;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";left:0;top:2.7777777777777777rem;bottom:0;right:auto;width:16.666666666666668rem;background:#efefef;box-sizing:border-box;color:inherit;overflow-y:auto;-webkit-transition:-webkit-transform 150ms ease-out;-webkit-transition:transform 150ms ease-out;transition:transform 150ms ease-out;}/*!sc*/
@media (max-width:62.5em){.bJUXUK{-webkit-transform:translateX(-16.666666666666668rem);-ms-transform:translateX(-16.666666666666668rem);transform:translateX(-16.666666666666668rem);}}/*!sc*/
data-styled.g57[id="Sidebar-sc-1279vcw-0"]{content:"bJUXUK,"}/*!sc*/
.eZKOCf{display:block;box-sizing:border-box;height:100%;padding-top:3.3333333333333335rem;}/*!sc*/
data-styled.g58[id="SidebarMenus__MenuInner-sc-11f7yr6-0"]{content:"eZKOCf,"}/*!sc*/
.bpdfid{margin-bottom:1.1111111111111112rem;}/*!sc*/
data-styled.g60[id="SidebarMenus__Section-sc-11f7yr6-2"]{content:"bpdfid,"}/*!sc*/
.kbhOYQ{display:block;margin:0.5555555555555556rem 2.2222222222222223rem;font-weight:normal;}/*!sc*/
data-styled.g61[id="SidebarMenus__SectionTitle-sc-11f7yr6-3"]{content:"kbhOYQ,"}/*!sc*/
.gcFzrT{display:block;margin:0.5555555555555556rem 2.2222222222222223rem 0.5555555555555556rem 3.0555555555555554rem;font-size:0.9rem;font-weight:normal;}/*!sc*/
data-styled.g62[id="SidebarMenus__SubSection-sc-11f7yr6-4"]{content:"gcFzrT,"}/*!sc*/
.gjGspO{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;width:100%;padding:2.2222222222222223rem 1.1111111111111112rem;text-align:right;font-family:"Avenir Next",-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";}/*!sc*/
@media (max-width:62.5em){.gjGspO{text-align:left;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:1.6666666666666667rem 1.1111111111111112rem;}}/*!sc*/
data-styled.g66[id="NextPage__Wrapper-xdq90t-0"]{content:"gjGspO,"}/*!sc*/
.eXUEOB{font-weight:normal;padding-right:1.1111111111111112rem;margin:0;}/*!sc*/
data-styled.g67[id="NextPage__Text-xdq90t-1"]{content:"eXUEOB,"}/*!sc*/
.bcGbnD{font-weight:600;padding-right:1.1111111111111112rem;margin:0;}/*!sc*/
data-styled.g68[id="NextPage__PageName-xdq90t-2"]{content:"bcGbnD,"}/*!sc*/
.gZxZAx{color:#282a36;width:1.6666666666666667rem;}/*!sc*/
data-styled.g69[id="NextPage__Icon-xdq90t-3"]{content:"gZxZAx,"}/*!sc*/
.gTLZXx{font-size:1.5em;text-align:center;color:palevioletred;}/*!sc*/
data-styled.g111[id="sc-hKgILt"]{content:"gTLZXx,"}/*!sc*/
.hmocIu{padding:4em;background:papayawhip;}/*!sc*/
data-styled.g112[id="sc-eCssSg"]{content:"hmocIu,"}/*!sc*/
.fnUJNQ{background:white;color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;}/*!sc*/
.gkKdxQ{background:palevioletred;color:white;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;}/*!sc*/
data-styled.g113[id="sc-jSgupP"]{content:"fnUJNQ,gkKdxQ,"}/*!sc*/
.gnwqMi{color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;}/*!sc*/
data-styled.g114[id="sc-gKsewC"]{content:"gnwqMi,"}/*!sc*/
.cOWINi{color:tomato;border-color:tomato;}/*!sc*/
data-styled.g115[id="sc-iBPRYJ"]{content:"cOWINi,"}/*!sc*/
.irPtrP{display:inline-block;color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;display:block;}/*!sc*/
data-styled.g116[id="sc-fubCfw"]{content:"irPtrP,"}/*!sc*/
.gbgfMs{color:tomato;border-color:tomato;}/*!sc*/
data-styled.g117[id="sc-pFZIQ"]{content:"gbgfMs,"}/*!sc*/
.dXWCyY{display:inline-block;color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;display:block;}/*!sc*/
data-styled.g118[id="sc-jrAGrp"]{content:"dXWCyY,"}/*!sc*/
.jbJDWL{color:palevioletred;font-weight:bold;}/*!sc*/
data-styled.g119[id="sc-kEjbxe"]{content:"jbJDWL,"}/*!sc*/
.cbiXCF{padding:0.5em;margin:0.5em;color:palevioletred;background:papayawhip;border:none;border-radius:3px;}/*!sc*/
.lMdrc{padding:0.5em;margin:0.5em;color:rebeccapurple;background:papayawhip;border:none;border-radius:3px;}/*!sc*/
data-styled.g120[id="sc-iqHYGH"]{content:"cbiXCF,lMdrc,"}/*!sc*/
.iDhzRL{color:blue;}/*!sc*/
.iDhzRL:hover{color:red;}/*!sc*/
.sc-crrsfI ~ .sc-crrsfI{background:tomato;}/*!sc*/
.sc-crrsfI + .sc-crrsfI{background:lime;}/*!sc*/
.iDhzRL.something{background:orange;}/*!sc*/
.something-else .sc-crrsfI{border:1px solid;}/*!sc*/
data-styled.g121[id="sc-crrsfI"]{content:"iDhzRL,"}/*!sc*/
.cQZIoF{color:blue;}/*!sc*/
.cQZIoF .something{border:1px solid;display:block;}/*!sc*/
data-styled.g122[id="sc-dQppl"]{content:"cQZIoF,"}/*!sc*/
.ehfErK.ehfErK{color:blue;}/*!sc*/
data-styled.g123[id="sc-bqyKva"]{content:"ehfErK,"}/*!sc*/
div.sc-bqyKva{color:red;}/*!sc*/
data-styled.g124[id="sc-global-cnvMty1"]{content:"sc-global-cnvMty1,"}/*!sc*/
.bqvnsu{color:palevioletred;font-size:1em;border:2px solid palevioletred;border-radius:3px;margin:1em;padding:1em;}/*!sc*/
.bpXYqS{color:palevioletred;font-size:1em;border:2px solid palevioletred;border-radius:3px;margin:2em;padding:2em;}/*!sc*/
data-styled.g125[id="sc-kstrdz"]{content:"bqvnsu,bpXYqS,"}/*!sc*/
.eHGMgU{border:2px solid palevioletred;margin:2em;padding:2em;}/*!sc*/
data-styled.g126[id="sc-hBEYos"]{content:"eHGMgU,"}/*!sc*/
.cYLuAZ{border:2px solid aqua;}/*!sc*/
data-styled.g127[id="sc-fodVxV"]{content:"cYLuAZ,"}/*!sc*/
.bjNVbG{display:inline-block;-webkit-animation:bKPVWD 2s linear infinite;animation:bKPVWD 2s linear infinite;padding:2rem 1rem;font-size:1.2rem;}/*!sc*/
data-styled.g128[id="sc-fFubgz"]{content:"bjNVbG,"}/*!sc*/
@-webkit-keyframes bKPVWD{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}/*!sc*/
@keyframes bKPVWD{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}/*!sc*/
data-styled.g129[id="sc-keyframes-bKPVWD"]{content:"bKPVWD,"}/*!sc*/
</style><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-WDWNSLK');</script><meta name="viewport" content="width=device-width"/><meta charSet="utf-8"/><title>styled-components: Basics</title><meta name="description" content="Get Started with styled-components basics."/><link itemProp="url" href="https://styled-components.com/"/><meta itemProp="name" content="styled-components: Basics"/><meta itemProp="description" content="Get Started with styled-components basics."/><meta itemProp="image" content="/atom.png"/><meta name="google-site-verification" content="lWntYW6AWVMcShSIWLmOzKr8Wyek2TR-zuQn6_XGu_c"/><meta property="og:locale" content="en_US"/><meta property="og:type" content="website"/><meta property="og:title" content="styled-components: Basics"/><meta property="og:url" content=""/><meta property="og:image" content="https://www.styled-components.com/atom.png"/><meta property="og:image:height" content="652"/><meta property="og:image:width" content="652"/><meta property="og:description" content="Get Started with styled-components basics."/><meta property="og:site_name" content="styled-components"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:site" content="@mxstbr"/><meta name="twitter:title" content="styled-components: Basics"/><meta name="twitter:description" content="Get Started with styled-components basics."/><meta name="twitter:creator" content="@mxstbr"/><meta name="twitter:image" content="https://www.styled-components.com/atom.png"/><meta name="twitter:url" content=""/><meta name="twitter:image:src" content="https://styled-components.com/meta.png"/><link rel="canonical" href="https://www.styled-components.com"/><meta name="robots" content="noodp"/><link rel="shortcut icon" href="/atom.png"/><link rel="icon" href="/atom.png"/><meta name="next-head-count" content="30"/><noscript data-n-css=""></noscript><link rel="preload" href="/_next/static/chunks/main-906ae913d939be95e5a8.js" as="script"/><link rel="preload" href="/_next/static/chunks/webpack-8c819e3ef2df2f5f5aad.js" as="script"/><link rel="preload" href="/_next/static/chunks/framework.27a611b9ebd7be09f176.js" as="script"/><link rel="preload" href="/_next/static/chunks/f0e45107.ed33b3d8b638e86c047c.js" as="script"/><link rel="preload" href="/_next/static/chunks/7fd37b7ba8d84fa41ab70b452111749abe0760ec.a738f1ae2ec5b0a98617.js" as="script"/><link rel="preload" href="/_next/static/chunks/commons.58f3ef812adb022ebd2e.js" as="script"/><link rel="preload" href="/_next/static/chunks/0d90860a103cf89931d2bc2d6e07a2c3f6b99c9e.006752a2318857351bcc.js" as="script"/><link rel="preload" href="/_next/static/chunks/c0c0319fce85c484c3969d97c98e44087d22dadf.0633ede551c57b7672c7.js" as="script"/><link rel="preload" href="/_next/static/chunks/pages/_app-02f83772197561cc5a8e.js" as="script"/><link rel="preload" href="/_next/static/chunks/228173bebd9edef01f5a11e0e3a61673d6df84ea.c83834f07bffa95b84be.js" as="script"/><link rel="preload" href="/_next/static/chunks/591c7b851e9b3983cbe083119af67b84ac2e5cb2.ae642cc967d2816d2a92.js" as="script"/><link rel="preload" href="/_next/static/chunks/pages/docs/basics-ab9802cb7db8391cd6d7.js" as="script"/></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WDWNSLK" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div class="root"><div id="__next"><div class="Layout__Container-sc-1s1pjfp-0 hCdnWm"><div><nav class="Navbar__Wrapper-sc-1mplyxk-0 jeGZFY"><div class="Navbar__NormalNavbar-sc-1mplyxk-4 flNfQR"><div class="Navbar__StartWrapper-sc-1mplyxk-1 hjEa-ds"><a href="/" class="Navbar__LogoLink-sc-1mplyxk-9 kMuYHQ"><div class="Logo-sc-1wiu9k4-0 dyJgcB"></div></a><nav class="NavLinks__Wrapper-sc-82sbtk-0 jasrud"><a href="/docs" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Documentation</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/showcase" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Showcase</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/ecosystem" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Ecosystem</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/releases" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Releases</a></nav></div><div class="Navbar__EndWrapper-sc-1mplyxk-2 bEBjcQ"><div class="Navbar__AlgoliaModalHeader-sc-1mplyxk-7 ifmAAj"><button><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Navbar__StyledModalCloseIcon-sc-1mplyxk-5 saBtW"><path fill="none" d="M0 0h24v24H0z"></path><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg></button></div><div class="Navbar__AlgoliaModalOverlay-sc-1mplyxk-8 gyIwfZ"><div class="Navbar__AlgoliaModal-sc-1mplyxk-6 fFiSHC"><div><form class="Search__Wrapper-sc-1u91ay0-1 gjDUjY"><label for="docs-search-input" class="Search__Button-sc-1u91ay0-3 cQDWKr"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Search__StyledSearchIcon-sc-1u91ay0-0 dhrnvU"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></svg></label><input type="search" id="docs-search-input" placeholder="Search docs ..." class="Search__Input-sc-1u91ay0-2 gxNjci"/></form></div></div></div><nav class="Social__Wrapper-sc-4j9mhd-0 Tsuea Navbar__StyledSocial-sc-1mplyxk-3 hxPukV"><a href="https://spectrum.chat/styled-components/" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg width="14" height="14" viewBox="0 0 15 15" class="Social__Svg-sc-4j9mhd-2 dyhrHD"><title>spectrum</title><path fill="#FFF" d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"></path></svg></a><a href="https://github.com/styled-components" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg viewBox="0 0 496 512" height="18" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Social__StyledIcon-sc-4j9mhd-3 cdsIpE"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></a><a href="https://medium.com/styled-components" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg viewBox="0 0 512 512" height="18" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Social__StyledIcon-sc-4j9mhd-3 cdsIpE"><path fill="currentColor" d="M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z"></path></svg></a></nav></div></div><div class="MobileNavbar__Wrapper-sc-1mwg5kk-0 iVhfQK"><button class="NavButton-bbdxin-0 bdBNrl"><svg xmlns="http://www.w3.org/2000/svg" width="17" height="14" xmlns:xlink="http://www.w3.org/1999/xlink" class="NavIcons__Svg-gjgetu-0 eUonps"><title>fold</title><use fill="#FFF" xlink:href="#fold" transform="translate(0 1)"></use><defs><path id="fold" d="M0 1h17v-2H0v2zm17 4H0v2h17V5zM0 13h17v-2H0v2z"></path></defs></svg></button><a aria-label="styled components" href="/" class="MobileNavbar__LogoLink-sc-1mwg5kk-2 efrxpQ"><div class="Logo-sc-1wiu9k4-0 cFIVVX"></div></a><div><button class="NavButton-bbdxin-0 bdBNrl"><svg viewBox="0 0 24 24" height="28" width="28" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW MobileNavbar__StyledIcon-sc-1mwg5kk-5 feDnqa"><path fill="none" d="M0 0h24v24H0z"></path><path d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></svg></button><button class="NavButton-bbdxin-0 bdBNrl"><div class="MobileNavbar__ArrowWrapper-sc-1mwg5kk-3 jRmDWN"><svg viewBox="0 0 24 24" height="36" width="36" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW MobileNavbar__StyledIcon-sc-1mwg5kk-5 evbhwi"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"></path></svg></div></button></div><div class="MobileNavbar__SecondaryMenu-sc-1mwg5kk-1 fJIdWQ"><nav class="NavLinks__Wrapper-sc-82sbtk-0 jasrud"><a href="/docs" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Documentation</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/showcase" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Showcase</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/ecosystem" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Ecosystem</a><span class="NavSeparator-sc-1afez1g-0 jzuIdj"></span><a href="/releases" class="NavLinks__NavLink-sc-82sbtk-1 cFWOAa">Releases</a></nav><div class="MobileNavbar__SecondaryMenuItem-sc-1mwg5kk-4 ktULex"><nav class="Social__Wrapper-sc-4j9mhd-0 Tsuea"><a href="https://spectrum.chat/styled-components/" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg width="14" height="14" viewBox="0 0 15 15" class="Social__Svg-sc-4j9mhd-2 dyhrHD"><title>spectrum</title><path fill="#FFF" d="M0 6.5V1c0-.6.4-1 1-1 9 .3 13.7 5 14 14 0 .6-.4 1-1 1H8.5c-.6 0-1-.4-1-1-.3-4.4-2-6.2-6.5-6.5-.6 0-1-.4-1-1z"></path></svg></a><a href="https://github.com/styled-components" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg viewBox="0 0 496 512" height="18" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Social__StyledIcon-sc-4j9mhd-3 cdsIpE"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></a><a href="https://medium.com/styled-components" class="Social__SocialLink-sc-4j9mhd-1 gfiIoH"><svg viewBox="0 0 512 512" height="18" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Social__StyledIcon-sc-4j9mhd-3 cdsIpE"><path fill="currentColor" d="M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z"></path></svg></a></nav></div></div></div></nav><nav class="Sidebar-sc-1279vcw-0 bJUXUK"><div class="SidebarMenus__MenuInner-sc-11f7yr6-0 eZKOCf"><div class="SidebarMenus__Section-sc-11f7yr6-2 bpdfid"><h4 class="SidebarMenus__SectionTitle-sc-11f7yr6-3 kbhOYQ"><a href="/docs/basics" class="Link__StyledLink-cnbpkq-0 caWOOv">Basics</a></h4><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#motivation" class="Link__StyledLink-cnbpkq-0 caWOOv">Motivation</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#installation" class="Link__StyledLink-cnbpkq-0 caWOOv">Installation</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#getting-started" class="Link__StyledLink-cnbpkq-0 caWOOv">Getting Started</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#adapting-based-on-props" class="Link__StyledLink-cnbpkq-0 caWOOv">Adapting based on props</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#extending-styles" class="Link__StyledLink-cnbpkq-0 caWOOv">Extending styles</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#styling-any-component" class="Link__StyledLink-cnbpkq-0 caWOOv">Styling any component</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#passed-props" class="Link__StyledLink-cnbpkq-0 caWOOv">Passed props</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#coming-from-css" class="Link__StyledLink-cnbpkq-0 caWOOv">Coming from CSS</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#attaching-additional-props" class="Link__StyledLink-cnbpkq-0 caWOOv">Attaching additional props</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#animations" class="Link__StyledLink-cnbpkq-0 caWOOv">Animations</a></h5><h5 class="SidebarMenus__SubSection-sc-11f7yr6-4 gcFzrT"><a href="/docs/basics#react-native" class="Link__StyledLink-cnbpkq-0 caWOOv">React Native</a></h5></div><div class="SidebarMenus__Section-sc-11f7yr6-2 bpdfid"><h4 class="SidebarMenus__SectionTitle-sc-11f7yr6-3 kbhOYQ"><a href="/docs/advanced" class="Link__StyledLink-cnbpkq-0 caWOOv">Advanced</a></h4></div><div class="SidebarMenus__Section-sc-11f7yr6-2 bpdfid"><h4 class="SidebarMenus__SectionTitle-sc-11f7yr6-3 kbhOYQ"><a href="/docs/api" class="Link__StyledLink-cnbpkq-0 caWOOv">API Reference</a></h4></div><div class="SidebarMenus__Section-sc-11f7yr6-2 bpdfid"><h4 class="SidebarMenus__SectionTitle-sc-11f7yr6-3 kbhOYQ"><a href="/docs/tooling" class="Link__StyledLink-cnbpkq-0 caWOOv">Tooling</a></h4></div><div class="SidebarMenus__Section-sc-11f7yr6-2 bpdfid"><h4 class="SidebarMenus__SectionTitle-sc-11f7yr6-3 kbhOYQ"><a href="/docs/faqs" class="Link__StyledLink-cnbpkq-0 caWOOv">FAQs</a></h4></div></div></nav></div><div data-e2e-id="content" class="Layout__Content-sc-1s1pjfp-1 iQlamx"><h1 class="Layout__Title-sc-1s1pjfp-2 dbvFQH">Basics</h1><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="motivation" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Motivation<a href="#motivation" aria-label="motivation" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p><strong>styled-components is the result of wondering how we could enhance CSS for styling React component systems.</strong> By focusing on a single use case we managed to optimize the experience for developers as well as the output for end users.</p><p>Apart from the improved experience for developers, styled-components provides:</p><ul><li><strong>Automatic critical CSS</strong>: styled-components keeps track of which components are rendered on a page and injects their styles and nothing else, fully automatically. Combined with code splitting, this means your users load the least amount of code necessary.</li><li><strong>No class name bugs</strong>: styled-components generates unique class names for your styles. You never have to worry about duplication, overlap or misspellings.</li><li><strong>Easier deletion of CSS</strong>: it can be hard to know whether a class name is used somewhere in your codebase. styled-components makes it obvious, as every bit of styling is tied to a specific component. If the component is unused (which tooling can detect) and gets deleted, all its styles get deleted with it.</li><li><strong>Simple dynamic styling</strong>: adapting the styling of a component based on its props or a global theme is simple and intuitive without having to manually manage dozens of classes.</li><li><strong>Painless maintenance</strong>: you never have to hunt across different files to find the styling affecting your component, so maintenance is a piece of cake no matter how big your codebase is.</li><li><strong>Automatic vendor prefixing</strong>: write your CSS to the current standard and let styled-components handle the rest.</li></ul><p>You get all of these benefits while still writing the CSS you know and love, just bound to individual components.</p><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="installation" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Installation<a href="#installation" aria-label="installation" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>Installing styled-components only takes a single command and you&#x27;re ready to roll:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false"># with npm
npm install --save styled-components

# with yarn
yarn add styled-components</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token plain"># with npm</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">npm install </span><span class="token operator" style="color:hsl(40, 90%, 60%)">--</span><span class="token plain">save styled</span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token plain">components</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"># with yarn</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">yarn add styled</span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token plain">components</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>If you use a package manager like <a href="https://yarnpkg.com/" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">yarn</a> that supports the &quot;resolutions&quot; package.json field, we also highly recommend you add an entry to it as well corresponding to the major version range. This helps avoid an entire class of problems that arise from multiple versions of styled-components being installed in your project.</p><p>In <span class="Code-sc-1gu2r1r-0 icKMIl">package.json</span>:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">{
  &quot;resolutions&quot;: {
    &quot;styled-components&quot;: &quot;^5&quot;
  }
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token property" style="color:hsl(350, 40%, 70%)">&quot;resolutions&quot;</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token property" style="color:hsl(350, 40%, 70%)">&quot;styled-components&quot;</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;^5&quot;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>It&#x27;s highly recommended (but not required) to also use the <a href="/docs/tooling#babel-plugin" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">Babel plugin</a>. It offers many benefits like more legible class names, server-side rendering compatibility, smaller bundles, and more.</p></div><details><summary>Click here to see alternative CDN installation instructions</summary><p>If you&#x27;re not using a module bundler or package manager we also have a global (&quot;UMD&quot;) build hosted on the <a href="http://unpkg.com" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">unpkg</a> CDN. Simply add the following <span class="Code-sc-1gu2r1r-0 icKMIl">&lt;script&gt;</span> tag to the bottom of your HTML file:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">&lt;script src=&quot;https://unpkg.com/styled-components/dist/styled-components.min.js&quot;&gt;&lt;/script&gt;</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">script</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">https://unpkg.com/styled-components/dist/styled-components.min.js</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">script</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>Once you&#x27;ve added <span class="Code-sc-1gu2r1r-0 icKMIl">styled-components</span> you will have access to the global <span class="Code-sc-1gu2r1r-0 icKMIl">window.styled</span> variable.</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Component = window.styled.div`
  color: red;
`</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> </span><span class="token maybe-class-name">Component</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token dom variable" style="color:hsl(40, 90%, 60%)">window</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token property-access">styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token property-access">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: red;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>This style of usage requires the <a href="https://reactjs.org/docs/cdn-links.html" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">react CDN bundles</a> and the <a href="https://unpkg.com/react-is/umd/react-is.production.min.js" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">react-is</span> CDN bundle</a> to be on the page as well (before the styled-components script.)</p></div></details><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="getting-started" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Getting Started<a href="#getting-started" aria-label="getting-started" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p><span class="Code-sc-1gu2r1r-0 icKMIl">styled-components</span> utilises tagged template literals to style your components.</p><p>It removes the mapping between components and styles. This means that when you&#x27;re defining your styles, you&#x27;re actually creating a normal React component, that has your styles attached to it.</p><p>This example creates two simple components, a wrapper and a title, with some styles attached to it:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">// Create a Title component that&#x27;ll render an &lt;h1&gt; tag with some styles
const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: palevioletred;
`;

// Create a Wrapper component that&#x27;ll render a &lt;section&gt; tag with some styles
const Wrapper = styled.section`
  padding: 4em;
  background: papayawhip;
`;

// Use Title and Wrapper like any other React component – except they&#x27;re styled!
render(
  &lt;Wrapper&gt;
    &lt;Title&gt;
      Hello World!
    &lt;/Title&gt;
  &lt;/Wrapper&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token comment" style="color:hsl(30, 20%, 50%)">// Create a Title component that&#x27;ll render an &lt;h1&gt; tag with some styles</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Title </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">h1</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1.5em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  text-align: center;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// Create a Wrapper component that&#x27;ll render a &lt;section&gt; tag with some styles</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Wrapper </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">section</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 4em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  background: papayawhip;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// Use Title and Wrapper like any other React component – except they&#x27;re styled!</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Wrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Title</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      Hello World</span><span class="token operator" style="color:hsl(40, 90%, 60%)">!</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Title</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Wrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><section class="sc-eCssSg hmocIu"><h1 class="sc-hKgILt gTLZXx">Hello World!</h1></section></div></div></pre><p>This is a live editor, so play around with the code to get a feel for what it&#x27;s like to work with styled-components!</p><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>The CSS rules are automatically vendor prefixed, styled-components takes care of that for you!</p><p>Styled components uses <a href="https://stylis.js.org/" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">stylis.js</a> package under the hood for prefixing the css rules.</p><p>For additional information about the supported prefixes in stylis.js visit their <a href="https://github.com/thysultan/stylis.js" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">repository</a>.</p></div><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="adapting-based-on-props" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Adapting based on props<a href="#adapting-based-on-props" aria-label="adapting-based-on-props" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>You can pass a function (&quot;interpolations&quot;) to a styled component&#x27;s template literal to adapt it based on its props.</p><p>This button component has a primary state that changes its color. When setting the <span class="Code-sc-1gu2r1r-0 icKMIl">primary</span> prop to true, we are swapping out its background and text color.</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Button = styled.button`
  /* Adapt the colors based on primary prop */
  background: ${props =&gt; props.primary ? &quot;palevioletred&quot; : &quot;white&quot;};
  color: ${props =&gt; props.primary ? &quot;white&quot; : &quot;palevioletred&quot;};

  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
`;

render(
  &lt;div&gt;
    &lt;Button&gt;Normal&lt;/Button&gt;
    &lt;Button primary&gt;Primary&lt;/Button&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Button </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">button</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* Adapt the colors based on primary prop */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  background: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">primary </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">?</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:hsl(40, 90%, 60%)">&quot;palevioletred&quot;</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:hsl(40, 90%, 60%)">&quot;white&quot;</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">primary </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">?</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:hsl(40, 90%, 60%)">&quot;white&quot;</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:hsl(40, 90%, 60%)">&quot;palevioletred&quot;</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 0.25em 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Normal</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">primary</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Primary</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><button class="sc-jSgupP fnUJNQ">Normal</button><button class="sc-jSgupP gkKdxQ">Primary</button></div></div></div></pre><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="extending-styles" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Extending Styles<a href="#extending-styles" aria-label="extending-styles" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>Quite frequently you might want to use a component, but change it slightly for a single case. Now, you could pass in an interpolated function and change them based on some props, but that&#x27;s quite a lot of effort for overriding the styles once.</p><p>To easily make a new component that inherits the styling of another, just wrap it in the <span class="Code-sc-1gu2r1r-0 icKMIl">styled()</span> constructor. Here we use the button from the last section and create a special one, extending it with some color-related styling:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">// The Button from the last section without the interpolations
const Button = styled.button`
  color: palevioletred;
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
`;

// A new component based on Button, but with some override styles
const TomatoButton = styled(Button)`
  color: tomato;
  border-color: tomato;
`;

render(
  &lt;div&gt;
    &lt;Button&gt;Normal Button&lt;/Button&gt;
    &lt;TomatoButton&gt;Tomato Button&lt;/TomatoButton&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token comment" style="color:hsl(30, 20%, 50%)">// The Button from the last section without the interpolations</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Button </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">button</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 0.25em 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// A new component based on Button, but with some override styles</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> TomatoButton </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token function">styled</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain">Button</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: tomato;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-color: tomato;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Normal Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">TomatoButton</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Tomato Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">TomatoButton</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><button class="sc-gKsewC gnwqMi">Normal Button</button><button class="sc-gKsewC sc-iBPRYJ gnwqMi cOWINi">Tomato Button</button></div></div></div></pre><p>We can see that the new <span class="Code-sc-1gu2r1r-0 icKMIl">TomatoButton</span> still resembles <span class="Code-sc-1gu2r1r-0 icKMIl">Button</span>, while we have only added two new rules.</p><p>In some cases you might want to change which tag or component a styled component renders. This is common when building a navigation bar for example, where there are a mix of anchor links and buttons but they should be styled identically.</p><p>For this situation, we have an escape hatch. You can use the <a href="/docs/api#as-polymorphic-prop" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">&quot;as&quot; polymorphic prop</span></a> to dynamically swap out the element that receives the styles you wrote:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Button = styled.button`
  display: inline-block;
  color: palevioletred;
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
  display: block;
`;

const TomatoButton = styled(Button)`
  color: tomato;
  border-color: tomato;
`;

render(
  &lt;div&gt;
    &lt;Button&gt;Normal Button&lt;/Button&gt;
    &lt;Button as=&quot;a&quot; href=&quot;#&quot;&gt;Link with Button styles&lt;/Button&gt;
    &lt;TomatoButton as=&quot;a&quot; href=&quot;#&quot;&gt;Link with Tomato Button styles&lt;/TomatoButton&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Button </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">button</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  display: inline-block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 0.25em 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  display: block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> TomatoButton </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token function">styled</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain">Button</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: tomato;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-color: tomato;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Normal Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">as</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">a</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">href</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">#</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Link </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">with</span><span class="token plain"> Button styles</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">TomatoButton</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">as</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">a</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">href</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">#</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Link </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">with</span><span class="token plain"> Tomato Button styles</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">TomatoButton</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><button class="sc-fubCfw irPtrP">Normal Button</button><a href="#" class="sc-fubCfw irPtrP">Link with Button styles</a><a href="#" class="sc-fubCfw sc-pFZIQ irPtrP gbgfMs">Link with Tomato Button styles</a></div></div></div></pre><p>This works perfectly fine with custom components too!</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Button = styled.button`
  display: inline-block;
  color: palevioletred;
  font-size: 1em;
  margin: 1em;
  padding: 0.25em 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;
  display: block;
`;

const ReversedButton = props =&gt; &lt;Button {...props} children={props.children.split(&#x27;&#x27;).reverse()} /&gt;

render(
  &lt;div&gt;
    &lt;Button&gt;Normal Button&lt;/Button&gt;
    &lt;Button as={ReversedButton}&gt;Custom Button with Normal Button styles&lt;/Button&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Button </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">button</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  display: inline-block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 0.25em 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  display: block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> </span><span class="token function-variable function">ReversedButton</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token parameter">props</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag spread punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag spread punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">...</span><span class="token tag spread attr-value" style="color:hsl(350, 40%, 70%)">props</span><span class="token tag spread punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">children</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">props</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">children</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript function" style="color:hsl(350, 40%, 70%)">split</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">(</span><span class="token tag script language-javascript string" style="color:hsl(40, 90%, 60%)">&#x27;&#x27;</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">)</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript function" style="color:hsl(350, 40%, 70%)">reverse</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">(</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">)</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Normal Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">as</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">ReversedButton</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Custom Button </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">with</span><span class="token plain"> Normal Button styles</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><button class="sc-jrAGrp dXWCyY">Normal Button</button><button class="sc-jrAGrp dXWCyY sc-jrAGrp dXWCyY">s<!-- -->e<!-- -->l<!-- -->y<!-- -->t<!-- -->s<!-- --> <!-- -->n<!-- -->o<!-- -->t<!-- -->t<!-- -->u<!-- -->B<!-- --> <!-- -->l<!-- -->a<!-- -->m<!-- -->r<!-- -->o<!-- -->N<!-- --> <!-- -->h<!-- -->t<!-- -->i<!-- -->w<!-- --> <!-- -->n<!-- -->o<!-- -->t<!-- -->t<!-- -->u<!-- -->B<!-- --> <!-- -->m<!-- -->o<!-- -->t<!-- -->s<!-- -->u<!-- -->C</button></div></div></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>If you are still on an older version than v4, you can use the <a href="/docs/api#withcomponent" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">.withComponent</span></a> or <a href="/docs/api#deprecated-extend" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">.extend</span></a> API&#x27;s to achieve the same result as with the <a href="/docs/api#as-polymorphic-prop" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">&quot;as&quot; prop</span></a>, but note that this is discouraged as with v4 <a href="/releases#breaking-changes" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">.extend</span> was removed</a> and <span class="Code-sc-1gu2r1r-0 icKMIl">.withComponent</span> was marked as a candidate for future deprecation.</p></div><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="styling-any-component" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Styling any component<a href="#styling-any-component" aria-label="styling-any-component" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>The <span class="Code-sc-1gu2r1r-0 icKMIl">styled</span> method works perfectly on all of your own or any third-party component, as long as they attach the passed <span class="Code-sc-1gu2r1r-0 icKMIl">className</span> prop to a DOM element.</p><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>If you are using <span class="Code-sc-1gu2r1r-0 icKMIl">react-native</span> keep in mind to use <span class="Code-sc-1gu2r1r-0 icKMIl">style</span> instead of <span class="Code-sc-1gu2r1r-0 icKMIl">className</span>.</p></div><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">// This could be react-router-dom&#x27;s Link for example
const Link = ({ className, children }) =&gt; (
  &lt;a className={className}&gt;
    {children}
  &lt;/a&gt;
);

const StyledLink = styled(Link)`
  color: palevioletred;
  font-weight: bold;
`;

render(
  &lt;div&gt;
    &lt;Link&gt;Unstyled, boring Link&lt;/Link&gt;
    &lt;br /&gt;
    &lt;StyledLink&gt;Styled, exciting Link&lt;/StyledLink&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token comment" style="color:hsl(30, 20%, 50%)">// This could be react-router-dom&#x27;s Link for example</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> </span><span class="token function-variable function">Link</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token parameter punctuation" style="opacity:0.7">{</span><span class="token parameter"> className</span><span class="token parameter punctuation" style="opacity:0.7">,</span><span class="token parameter"> children </span><span class="token parameter punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">a</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">className</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain">children</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">a</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledLink </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token function">styled</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain">Link</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-weight: bold;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Link</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Unstyled</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"> boring Link</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Link</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">br</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledLink</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Styled</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"> exciting Link</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledLink</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><a>Unstyled, boring Link</a><br/><a class="sc-kEjbxe jbJDWL">Styled, exciting Link</a></div></div></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>You can also pass tag names into the <span class="Code-sc-1gu2r1r-0 icKMIl">styled()</span> factory call, like so: <span class="Code-sc-1gu2r1r-0 icKMIl">styled(&quot;div&quot;)</span>. In fact, the <span class="Code-sc-1gu2r1r-0 icKMIl">styled.tagname</span> helpers are just aliases that do the same.</p></div><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="passed-props" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Passed props<a href="#passed-props" aria-label="passed-props" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>If the styled target is a simple element (e.g. <span class="Code-sc-1gu2r1r-0 icKMIl">styled.div</span>), styled-components passes through any known HTML attribute to the DOM. If it is a custom React component (e.g. <span class="Code-sc-1gu2r1r-0 icKMIl">styled(MyComponent)</span>), styled-components passes through all props.</p><p>This example shows how all props of the Input component are passed on to the
DOM node that is mounted, as with React elements.</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">// Create an Input component that&#x27;ll render an &lt;input&gt; tag with some styles
const Input = styled.input`
  padding: 0.5em;
  margin: 0.5em;
  color: ${props =&gt; props.inputColor || &quot;palevioletred&quot;};
  background: papayawhip;
  border: none;
  border-radius: 3px;
`;

// Render a styled text input with the standard input color, and one with a custom input color
render(
  &lt;div&gt;
    &lt;Input defaultValue=&quot;@probablyup&quot; type=&quot;text&quot; /&gt;
    &lt;Input defaultValue=&quot;@geelen&quot; type=&quot;text&quot; inputColor=&quot;rebeccapurple&quot; /&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token comment" style="color:hsl(30, 20%, 50%)">// Create an Input component that&#x27;ll render an &lt;input&gt; tag with some styles</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Input </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">input</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 0.5em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 0.5em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">inputColor </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">||</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation string" style="color:hsl(40, 90%, 60%)">&quot;palevioletred&quot;</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  background: papayawhip;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: none;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// Render a styled text input with the standard input color, and one with a custom input color</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Input</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">defaultValue</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">@probablyup</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">text</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Input</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">defaultValue</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">@geelen</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">text</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">inputColor</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">rebeccapurple</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><input type="text" class="sc-iqHYGH cbiXCF" value="@probablyup"/><input type="text" class="sc-iqHYGH lMdrc" value="@geelen"/></div></div></div></pre><p>Note how the <span class="Code-sc-1gu2r1r-0 icKMIl">inputColor</span> prop is not passed to the DOM, but <span class="Code-sc-1gu2r1r-0 icKMIl">type</span> and <span class="Code-sc-1gu2r1r-0 icKMIl">defaultValue</span> are. That is styled-components being smart enough to filter non-standard attributes automatically for you.</p><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="coming-from-css" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Coming from CSS<a href="#coming-from-css" aria-label="coming-from-css" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><h3 class="Layout__SubHeader-sc-1s1pjfp-4 bfNrKe Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="how-do-styled-components-work-within-a-component" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>How do Styled Components work within a component?<a href="#how-do-styled-components-work-within-a-component" aria-label="how-do-styled-components-work-within-a-component" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h3><p>If you&#x27;re familiar with importing CSS into your components (e.g. like CSSModules) you&#x27;ll be used to doing something like this:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">import React from &#x27;react&#x27;
import styles from &#x27;./styles.css&#x27;

export default class Counter extends React.Component {
  state = { count: 0 }

  increment = () =&gt; this.setState({ count: this.state.count + 1 })
  decrement = () =&gt; this.setState({ count: this.state.count - 1 })

  render() {
    return (
      &lt;div className={styles.counter}&gt;
        &lt;p className={styles.paragraph}&gt;{this.state.count}&lt;/p&gt;
        &lt;button className={styles.button} onClick={this.increment}&gt;
          +
        &lt;/button&gt;
        &lt;button className={styles.button} onClick={this.decrement}&gt;
          -
        &lt;/button&gt;
      &lt;/div&gt;
    )
  }
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> React </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;react&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> styles </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;./styles.css&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">export</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">default</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">class</span><span class="token plain"> </span><span class="token class-name">Counter</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">extends</span><span class="token plain"> </span><span class="token class-name">React</span><span class="token class-name punctuation" style="opacity:0.7">.</span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  state </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">0</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function-variable function">increment</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">setState</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count </span><span class="token operator" style="color:hsl(40, 90%, 60%)">+</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">1</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function-variable function">decrement</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">setState</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count </span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">1</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">return</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">styles</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">counter</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">p</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">styles</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">paragraph</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">p</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">styles</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">increment</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">          </span><span class="token operator" style="color:hsl(40, 90%, 60%)">+</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">styles</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">decrement</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">          </span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>Because a Styled Component is the <em>combination</em> of the element and the rules that style it, we&#x27;d write <span class="Code-sc-1gu2r1r-0 icKMIl">Counter</span> like this:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">import React from &#x27;react&#x27;
import styled from &#x27;styled-components&#x27;

const StyledCounter = styled.div`
  /* ... */
`
const Paragraph = styled.p`
  /* ... */
`
const Button = styled.button`
  /* ... */
`

export default class Counter extends React.Component {
  state = { count: 0 }

  increment = () =&gt; this.setState({ count: this.state.count + 1 })
  decrement = () =&gt; this.setState({ count: this.state.count - 1 })

  render() {
    return (
      &lt;StyledCounter&gt;
        &lt;Paragraph&gt;{this.state.count}&lt;/Paragraph&gt;
        &lt;Button onClick={this.increment}&gt;+&lt;/Button&gt;
        &lt;Button onClick={this.decrement}&gt;-&lt;/Button&gt;
      &lt;/StyledCounter&gt;
    )
  }
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> React </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;react&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> styled </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;styled-components&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledCounter </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* ... */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Paragraph </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">p</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* ... */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Button </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">button</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* ... */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">export</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">default</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">class</span><span class="token plain"> </span><span class="token class-name">Counter</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">extends</span><span class="token plain"> </span><span class="token class-name">React</span><span class="token class-name punctuation" style="opacity:0.7">.</span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  state </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">0</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function-variable function">increment</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">setState</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count </span><span class="token operator" style="color:hsl(40, 90%, 60%)">+</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">1</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function-variable function">decrement</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">setState</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> count</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count </span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">1</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">return</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledCounter</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Paragraph</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">state</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">count</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Paragraph</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">increment</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token operator" style="color:hsl(40, 90%, 60%)">+</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">{</span><span class="token tag script language-javascript keyword" style="color:hsl(350, 40%, 70%)">this</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">.</span><span class="token tag script language-javascript" style="color:hsl(350, 40%, 70%)">decrement</span><span class="token tag script language-javascript punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token operator" style="color:hsl(40, 90%, 60%)">-</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledCounter</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>Note that we added a &quot;Styled&quot; prefix to <span class="Code-sc-1gu2r1r-0 icKMIl">StyledCounter</span> so that the React component <span class="Code-sc-1gu2r1r-0 icKMIl">Counter</span> and the Styled Component <span class="Code-sc-1gu2r1r-0 icKMIl">StyledCounter</span> don&#x27;t clash names but remain easily identifiable in the React Developer Tools and Web Inspector.</p><h3 class="Layout__SubHeader-sc-1s1pjfp-4 bfNrKe Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="define-styled-components-outside-of-the-render-method" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Define Styled Components outside of the render method<a href="#define-styled-components-outside-of-the-render-method" aria-label="define-styled-components-outside-of-the-render-method" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h3><p>It is important to define your styled components outside of the render method, otherwise it will be recreated on every single render pass. Defining a styled component within the render method will thwart caching and drastically slow down rendering speed, and should be avoided.</p><p>Write your styled components the recommended way:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const StyledWrapper = styled.div`
  /* ... */
`

const Wrapper = ({ message }) =&gt; {
  return &lt;StyledWrapper&gt;{message}&lt;/StyledWrapper&gt;
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledWrapper </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* ... */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> </span><span class="token function-variable function">Wrapper</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token parameter punctuation" style="opacity:0.7">{</span><span class="token parameter"> message </span><span class="token parameter punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledWrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain">message</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledWrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>Instead of:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Wrapper = ({ message }) =&gt; {
  // WARNING: THIS IS VERY VERY BAD AND SLOW, DO NOT DO THIS!!!
  const StyledWrapper = styled.div`
    /* ... */
  `

  return &lt;StyledWrapper&gt;{message}&lt;/StyledWrapper&gt;
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> </span><span class="token function-variable function">Wrapper</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token parameter punctuation" style="opacity:0.7">{</span><span class="token parameter"> message </span><span class="token parameter punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token comment" style="color:hsl(30, 20%, 50%)">// WARNING: THIS IS VERY VERY BAD AND SLOW, DO NOT DO THIS!!!</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledWrapper </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    /* ... */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  </span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledWrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain">message</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledWrapper</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p><strong>Recommended reading</strong>: <a href="https://twitter.com/talialongname" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">Talia Marcassa</a>
wrote a great review of real-world usage, featuring lots of solid practical insights
and comparisons with alternatives, in <a href="https://medium.com/building-crowdriff/styled-components-to-use-or-not-to-use-a6bb4a7ffc21" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">Styled Components: To Use or Not to Use?</a></p><h3 class="Layout__SubHeader-sc-1s1pjfp-4 bfNrKe Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="pseudoelements-pseudoselectors-and-nesting" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Pseudoelements, pseudoselectors, and nesting<a href="#pseudoelements-pseudoselectors-and-nesting" aria-label="pseudoelements-pseudoselectors-and-nesting" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h3><p>The preprocessor we use, <a href="https://github.com/thysultan/stylis.js" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">stylis</a>, supports scss-like syntax for automatically nesting styles.</p><p>The ampersand (<span class="Code-sc-1gu2r1r-0 icKMIl">&amp;</span>) can be used to refer back to the main component. Here are some more examples of its potential usage:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Thing = styled.div.attrs((/* props */) =&gt; ({ tabIndex: 0 }))`
  color: blue;

  &amp;:hover {
    color: red; // &lt;Thing&gt; when hovered
  }

  &amp; ~ &amp; {
    background: tomato; // &lt;Thing&gt; as a sibling of &lt;Thing&gt;, but maybe not directly next to it
  }

  &amp; + &amp; {
    background: lime; // &lt;Thing&gt; next to &lt;Thing&gt;
  }

  &amp;.something {
    background: orange; // &lt;Thing&gt; tagged with an additional CSS class &quot;.something&quot;
  }

  .something-else &amp; {
    border: 1px solid; // &lt;Thing&gt; inside another element labeled &quot;.something-else&quot;
  }
`

render(
  &lt;React.Fragment&gt;
    &lt;Thing&gt;Hello world!&lt;/Thing&gt;
    &lt;Thing&gt;How ya doing?&lt;/Thing&gt;
    &lt;Thing className=&quot;something&quot;&gt;The sun is shining...&lt;/Thing&gt;
    &lt;div&gt;Pretty nice day today.&lt;/div&gt;
    &lt;Thing&gt;Don&#x27;t you think?&lt;/Thing&gt;
    &lt;div className=&quot;something-else&quot;&gt;
      &lt;Thing&gt;Splendid.&lt;/Thing&gt;
    &lt;/div&gt;
  &lt;/React.Fragment&gt;
)</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Thing </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">attrs</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token comment" style="color:hsl(30, 20%, 50%)">/* props */</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"> tabIndex</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token number" style="color:hsl(350, 40%, 70%)">0</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: blue;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  &amp;:hover {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    color: red; // &lt;Thing&gt; when hovered</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  &amp; ~ &amp; {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    background: tomato; // &lt;Thing&gt; as a sibling of &lt;Thing&gt;, but maybe not directly next to it</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  &amp; + &amp; {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    background: lime; // &lt;Thing&gt; next to &lt;Thing&gt;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  &amp;.something {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    background: orange; // &lt;Thing&gt; tagged with an additional CSS class &quot;.something&quot;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  .something-else &amp; {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    border: 1px solid; // &lt;Thing&gt; inside another element labeled &quot;.something-else&quot;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">React.Fragment</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Hello world</span><span class="token operator" style="color:hsl(40, 90%, 60%)">!</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">How ya doing</span><span class="token operator" style="color:hsl(40, 90%, 60%)">?</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">something</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">The sun is shining</span><span class="token operator" style="color:hsl(40, 90%, 60%)">...</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Pretty nice day today</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Don&#x27;t you think</span><span class="token operator" style="color:hsl(40, 90%, 60%)">?</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">something-else</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Splendid</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">React.Fragment</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div tabindex="0" class="sc-crrsfI iDhzRL">Hello world!</div><div tabindex="0" class="sc-crrsfI iDhzRL">How ya doing?</div><div class="sc-crrsfI iDhzRL something" tabindex="0">The sun is shining...</div><div>Pretty nice day today.</div><div tabindex="0" class="sc-crrsfI iDhzRL">Don&#x27;t you think?</div><div class="something-else"><div tabindex="0" class="sc-crrsfI iDhzRL">Splendid.</div></div></div></div></pre><p>If you put selectors in without the ampersand, they will refer to children of the component.</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Thing = styled.div`
  color: blue;

  .something {
    border: 1px solid; // an element labeled &quot;.something&quot; inside &lt;Thing&gt;
    display: block;
  }
`

render(
  &lt;Thing&gt;
    &lt;label htmlFor=&quot;foo-button&quot; className=&quot;something&quot;&gt;Mystery button&lt;/label&gt;
    &lt;button id=&quot;foo-button&quot;&gt;What do I do?&lt;/button&gt;
  &lt;/Thing&gt;
)</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Thing </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: blue;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  .something {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    border: 1px solid; // an element labeled &quot;.something&quot; inside &lt;Thing&gt;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    display: block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">label</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">htmlFor</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">foo-button</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">something</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Mystery button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">label</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">id</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">foo-button</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">What </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">do</span><span class="token plain"> </span><span class="token constant" style="color:hsl(350, 40%, 70%)">I</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">do</span><span class="token operator" style="color:hsl(40, 90%, 60%)">?</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">button</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div class="sc-dQppl cQZIoF"><label for="foo-button" class="something">Mystery button</label><button id="foo-button">What do I do?</button></div></div></div></pre><p>Finally, the ampersand can be used to increase the specificity of rules on the component; this can be useful if you are dealing with a mixed styled-components and vanilla CSS environment where there might be conflicting styles:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Thing = styled.div`
  &amp;&amp; {
    color: blue;
  }
`

const GlobalStyle = createGlobalStyle`
  div${Thing} {
    color: red;
  }
`

render(
  &lt;React.Fragment&gt;
    &lt;GlobalStyle /&gt;
    &lt;Thing&gt;
      I&#x27;m blue, da ba dee da ba daa
    &lt;/Thing&gt;
  &lt;/React.Fragment&gt;
)</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Thing </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  &amp;&amp; {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    color: blue;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> GlobalStyle </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> createGlobalStyle</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  div</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation">Thing</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"> {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    color: red;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">React.Fragment</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">GlobalStyle</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token constant" style="color:hsl(350, 40%, 70%)">I</span><span class="token plain">&#x27;m blue</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"> da ba dee da ba daa</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Thing</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">React.Fragment</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div class="sc-bqyKva ehfErK">I&#x27;m blue, da ba dee da ba daa</div></div></div></pre><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="attaching-additional-props" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Attaching additional props <div class="Label__LabelGroup-sc-1ycyyhc-0 dfWsiH"><small class="Label-sc-1ycyyhc-1 jyYMCt">v2</small></div><a href="#attaching-additional-props" aria-label="attaching-additional-props" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>To avoid unnecessary wrappers that just pass on some props to the rendered component, or element, you can use the <a href="/docs/api#attrs" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span> constructor</a>. It allows you to attach additional props (or &quot;attributes&quot;) to a component.</p><p>This way you can for example attach static props to an element, or pass a third-party prop like <span class="Code-sc-1gu2r1r-0 icKMIl">activeClassName</span> to React Router&#x27;s Link component. Furthermore you can also attach more dynamic props to a component. The <span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span> object also takes functions, that receive the props that the component receives. The return value will be merged into the resulting props as well.</p><p>Here we render an <span class="Code-sc-1gu2r1r-0 icKMIl">Input</span> component and attach some dynamic and static attributes to it:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Input = styled.input.attrs(props =&gt; ({
  // we can define static props
  type: &quot;text&quot;,

  // or we can define dynamic ones
  size: props.size || &quot;1em&quot;,
}))`
  color: palevioletred;
  font-size: 1em;
  border: 2px solid palevioletred;
  border-radius: 3px;

  /* here we use the dynamically computed prop */
  margin: ${props =&gt; props.size};
  padding: ${props =&gt; props.size};
`;

render(
  &lt;div&gt;
    &lt;Input placeholder=&quot;A small text input&quot; /&gt;
    &lt;br /&gt;
    &lt;Input placeholder=&quot;A bigger text input&quot; size=&quot;2em&quot; /&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Input </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">input</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">attrs</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token parameter">props</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token comment" style="color:hsl(30, 20%, 50%)">// we can define static props</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  type</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;text&quot;</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token comment" style="color:hsl(30, 20%, 50%)">// or we can define dynamic ones</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  size</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> props</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">size </span><span class="token operator" style="color:hsl(40, 90%, 60%)">||</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;1em&quot;</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1em;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border-radius: 3px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  /* here we use the dynamically computed prop */</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">size</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">size</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Input</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">placeholder</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">A small text input</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">br</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Input</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">placeholder</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">A bigger text input</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">2em</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><input type="text" placeholder="A small text input" class="sc-kstrdz bqvnsu"/><br/><input type="text" placeholder="A bigger text input" class="sc-kstrdz bpXYqS"/></div></div></div></pre><p>As you can see, we get access to our newly created props in the interpolations, and the <span class="Code-sc-1gu2r1r-0 icKMIl">type</span> attribute is passed down to the element.</p><h3 class="Layout__SubHeader-sc-1s1pjfp-4 bfNrKe Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="overriding-attrs" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Overriding .attrs<a href="#overriding-attrs" aria-label="overriding-attrs" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h3><p>Notice that when wrapping styled components, <span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span> are applied from the innermost styled component to the outermost styled component.</p><p>This allows each wrapper to <strong>override</strong> nested uses of <span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span>, similarly to how css properties defined later in a stylesheet override previous declarations.</p><p><span class="Code-sc-1gu2r1r-0 icKMIl">Input</span>&#x27;s <span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span> are applied first, and then <span class="Code-sc-1gu2r1r-0 icKMIl">PasswordInput</span>&#x27;s <span class="Code-sc-1gu2r1r-0 icKMIl">.attrs</span>:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const Input = styled.input.attrs(props =&gt; ({
  type: &quot;text&quot;,
  size: props.size || &quot;1em&quot;,
}))`
  border: 2px solid palevioletred;
  margin: ${props =&gt; props.size};
  padding: ${props =&gt; props.size};
`;

// Input&#x27;s attrs will be applied first, and then this attrs obj
const PasswordInput = styled(Input).attrs({
  type: &quot;password&quot;,
})`
  // similarly, border will override Input&#x27;s border
  border: 2px solid aqua;
`;

render(
  &lt;div&gt;
    &lt;Input placeholder=&quot;A bigger text input&quot; size=&quot;2em&quot; /&gt;
    &lt;br /&gt;
    {/* Notice we can still use the size attr from Input */}
    &lt;PasswordInput placeholder=&quot;A bigger password input&quot; size=&quot;2em&quot; /&gt;
  &lt;/div&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Input </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">input</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">attrs</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token parameter">props</span><span class="token plain"> </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  type</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;text&quot;</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  size</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> props</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">size </span><span class="token operator" style="color:hsl(40, 90%, 60%)">||</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;1em&quot;</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">size</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation parameter">props</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation operator" style="color:hsl(40, 90%, 60%)">=&gt;</span><span class="token template-string interpolation"> props</span><span class="token template-string interpolation punctuation" style="opacity:0.7">.</span><span class="token template-string interpolation">size</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)">;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// Input&#x27;s attrs will be applied first, and then this attrs obj</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> PasswordInput </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token function">styled</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain">Input</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token function">attrs</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  type</span><span class="token operator" style="color:hsl(40, 90%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&quot;password&quot;</span><span class="token punctuation" style="opacity:0.7">,</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  // similarly, border will override Input&#x27;s border</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  border: 2px solid aqua;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Input</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">placeholder</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">A bigger text input</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">2em</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag" style="color:hsl(350, 40%, 70%)">br</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token comment" style="color:hsl(30, 20%, 50%)">/* Notice we can still use the size attr from Input */</span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">PasswordInput</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">placeholder</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">A bigger password input</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag attr-name" style="color:hsl(75, 70%, 60%)">size</span><span class="token tag attr-value punctuation attr-equals" style="color:hsl(350, 40%, 70%);opacity:0.7">=</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag attr-value" style="color:hsl(350, 40%, 70%)">2em</span><span class="token tag attr-value punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&quot;</span><span class="token tag" style="color:hsl(350, 40%, 70%)"> </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">/&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag" style="color:hsl(350, 40%, 70%)">div</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div><input type="text" placeholder="A bigger text input" class="sc-hBEYos eHGMgU"/><br/><input type="password" placeholder="A bigger password input" class="sc-hBEYos sc-fodVxV eHGMgU cYLuAZ"/></div></div></div></pre><p>This is why <span class="Code-sc-1gu2r1r-0 icKMIl">PasswordInput</span> is of a password type, but still uses the <span class="Code-sc-1gu2r1r-0 icKMIl">size</span> attribute from <span class="Code-sc-1gu2r1r-0 icKMIl">Input</span>.</p><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="animations" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Animations<a href="#animations" aria-label="animations" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>CSS animations with <span class="Code-sc-1gu2r1r-0 icKMIl">@keyframes</span> aren&#x27;t scoped to a single component but you still don&#x27;t want them to be global to avoid name collisions. This is why we export a <span class="Code-sc-1gu2r1r-0 icKMIl">keyframes</span> helper which will generate a unique instance that you can use throughout your app:</p><pre><div class="LiveEdit__Row-sc-98ci5q-1 hcTuFK"><code class="LiveEdit__Code-sc-98ci5q-2 dRKGpi"><div class="LiveEdit__StyledEditor-sc-98ci5q-3 blaelo" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">// Create the keyframes
const rotate = keyframes`
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
`;

// Here we create a component that will rotate everything we pass in over two seconds
const Rotate = styled.div`
  display: inline-block;
  animation: ${rotate} 2s linear infinite;
  padding: 2rem 1rem;
  font-size: 1.2rem;
`;

render(
  &lt;Rotate&gt;&amp;lt; 💅🏾 &amp;gt;&lt;/Rotate&gt;
);</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token comment" style="color:hsl(30, 20%, 50%)">// Create the keyframes</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> rotate </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> keyframes</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  from {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    transform: rotate(0deg);</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="display:inline-block;color:hsl(40, 90%, 60%)">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  to {</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">    transform: rotate(360deg);</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  }</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// Here we create a component that will rotate everything we pass in over two seconds</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> Rotate </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">div</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  display: inline-block;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  animation: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation">rotate</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"> 2s linear infinite;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  padding: 2rem 1rem;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-size: 1.2rem;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token punctuation" style="opacity:0.7">;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Rotate</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token entity named-entity" style="color:hsl(40, 90%, 60%)">&amp;lt;</span><span class="token plain"> 💅🏾 </span><span class="token entity named-entity" style="color:hsl(40, 90%, 60%)">&amp;gt;</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">Rotate</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">)</span><span class="token punctuation" style="opacity:0.7">;</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></code><div class="LiveEdit__StyledPreview-sc-98ci5q-4 byNFjc notranslate"><div class="sc-fFubgz bjNVbG">&lt; 💅🏾 &gt;</div></div></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>Keyframes are not supported by <span class="Code-sc-1gu2r1r-0 icKMIl">react-native</span>. Instead, use the <a href="https://stackoverflow.com/questions/50891046/rotate-an-svg-in-react-native/50891225#50891225" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">ReactNative.Animated</span> API</a>.</p></div><p>Keyframes are lazily injected when they&#x27;re used, which is how they can be code-splitted, so you have to use <a href="/docs/api#css" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">the <span class="Code-sc-1gu2r1r-0 icKMIl">css</span> helper</a> for shared style fragments:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const rotate = keyframes``

// ❌ This will throw an error!
const styles = `
  animation: ${rotate} 2s linear infinite;
`

// ✅ This will work as intended
const styles = css`
  animation: ${rotate} 2s linear infinite;
`</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> rotate </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> keyframes</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// ❌ This will throw an error!</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> styles </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  animation: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation">rotate</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"> 2s linear infinite;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token comment" style="color:hsl(30, 20%, 50%)">// ✅ This will work as intended</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> styles </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> css</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  animation: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">${</span><span class="token template-string interpolation">rotate</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="opacity:0.7">}</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"> 2s linear infinite;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>This used to work in v3 and below where we didn&#x27;t code-split keyframes. If you&#x27;re upgrading from v3, make sure that all your shared style fragments are using the <span class="Code-sc-1gu2r1r-0 icKMIl">css</span> helper!</p></div><h2 class="Layout__Header-sc-1s1pjfp-3 hqEMEp Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="react-native" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>React Native<a href="#react-native" aria-label="react-native" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h2><p>styled-components can be used with React Native in the same way and with the
same import. Try this example with <a href="https://snack.expo.io/@danielmschmidt/styled-components" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">Snack by Expo</a>.</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">import React from &#x27;react&#x27;
import styled from &#x27;styled-components/native&#x27;

const StyledView = styled.View`
  background-color: papayawhip;
`

const StyledText = styled.Text`
  color: palevioletred;
`

class MyReactNativeComponent extends React.Component {
  render() {
    return (
      &lt;StyledView&gt;
        &lt;StyledText&gt;Hello World!&lt;/StyledText&gt;
      &lt;/StyledView&gt;
    )
  }
}</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> React </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;react&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">import</span><span class="token plain"> styled </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">from</span><span class="token plain"> </span><span class="token string" style="color:hsl(40, 90%, 60%)">&#x27;styled-components/native&#x27;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledView </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">View</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  background-color: papayawhip;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> StyledText </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">Text</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  color: palevioletred;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain" style="display:inline-block">
</span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token keyword" style="color:hsl(350, 40%, 70%)">class</span><span class="token plain"> </span><span class="token class-name">MyReactNativeComponent</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">extends</span><span class="token plain"> </span><span class="token class-name">React</span><span class="token class-name punctuation" style="opacity:0.7">.</span><span class="token class-name">Component</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token function">render</span><span class="token punctuation" style="opacity:0.7">(</span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">{</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token keyword" style="color:hsl(350, 40%, 70%)">return</span><span class="token plain"> </span><span class="token punctuation" style="opacity:0.7">(</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledView</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">        </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledText</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain">Hello World</span><span class="token operator" style="color:hsl(40, 90%, 60%)">!</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledText</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">      </span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&lt;/</span><span class="token tag class-name" style="color:hsl(350, 40%, 70%)">StyledView</span><span class="token tag punctuation" style="color:hsl(350, 40%, 70%);opacity:0.7">&gt;</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">    </span><span class="token punctuation" style="opacity:0.7">)</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain">  </span><span class="token punctuation" style="opacity:0.7">}</span><span class="token plain"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token plain"></span><span class="token punctuation" style="opacity:0.7">}</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>We also support more complex styles (like <span class="Code-sc-1gu2r1r-0 icKMIl">transform</span>), which would normally
be an array, and shorthands (e.g. for <span class="Code-sc-1gu2r1r-0 icKMIl">margin</span>) thanks to
<a href="https://github.com/styled-components/css-to-react-native" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">css-to-react-native</span></a>!</p><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>Note that the <span class="Code-sc-1gu2r1r-0 icKMIl">flex</span> property works like CSS shorthand, and not the legacy
<span class="Code-sc-1gu2r1r-0 icKMIl">flex</span> property in React Native. Setting <span class="Code-sc-1gu2r1r-0 icKMIl">flex: 1</span> sets <span class="Code-sc-1gu2r1r-0 icKMIl">flexShrink</span>
to <span class="Code-sc-1gu2r1r-0 icKMIl">1</span> in addition to setting <span class="Code-sc-1gu2r1r-0 icKMIl">flexGrow</span> to <span class="Code-sc-1gu2r1r-0 icKMIl">1</span> and <span class="Code-sc-1gu2r1r-0 icKMIl">flexBasis</span> to <span class="Code-sc-1gu2r1r-0 icKMIl">0</span>.</p></div><p>Imagine how you&#x27;d write the property in React Native, guess how you&#x27;d transfer
it to CSS, and you&#x27;re probably right:</p><pre><div class="CodeBlock-sc-1qhv3lv-0 bHCJrj" style="position:relative;text-align:left;box-sizing:border-box;padding:0;overflow:hidden;white-space:pre;font-family:monospace"><textarea style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:absolute;top:0;left:0;height:100%;width:100%;resize:none;color:inherit;overflow:hidden;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;-webkit-text-fill-color:transparent;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px" class="npm__react-simple-code-editor__textarea" disabled="" autoCapitalize="off" autoComplete="off" autoCorrect="off" spellcheck="false" data-gramm="false">const RotatedBox = styled.View`
  transform: rotate(90deg);
  text-shadow-offset: 10px 5px;
  font-variant: small-caps;
  margin: 5px 7px 2px;
`</textarea><pre aria-hidden="true" style="margin:0;border:0;background:none;box-sizing:inherit;display:inherit;font-family:inherit;font-size:inherit;font-style:inherit;font-variant-ligatures:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;tab-size:inherit;text-indent:inherit;text-rendering:inherit;text-transform:inherit;white-space:pre-wrap;word-break:keep-all;overflow-wrap:break-word;position:relative;pointer-events:none;padding-top:10px;padding-right:10px;padding-bottom:10px;padding-left:10px"><div class="token-line" style="color:#C5C8C6"><span class="token keyword" style="color:hsl(350, 40%, 70%)">const</span><span class="token plain"> RotatedBox </span><span class="token operator" style="color:hsl(40, 90%, 60%)">=</span><span class="token plain"> styled</span><span class="token punctuation" style="opacity:0.7">.</span><span class="token plain">View</span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  transform: rotate(90deg);</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  text-shadow-offset: 10px 5px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  font-variant: small-caps;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)">  margin: 5px 7px 2px;</span></div><div class="token-line" style="color:#C5C8C6"><span class="token template-string string" style="color:hsl(40, 90%, 60%)"></span><span class="token template-string template-punctuation string" style="color:hsl(40, 90%, 60%)">`</span></div></pre><style type="text/css">
/**
 * Reset the text fill color so that placeholder is visible
 */
.npm__react-simple-code-editor__textarea:empty {
  -webkit-text-fill-color: inherit !important;
}

/**
 * Hack to apply on some CSS on IE10 and IE11
 */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /**
    * IE doesn't support '-webkit-text-fill-color'
    * So we use 'color: transparent' to make the text transparent on IE
    * Unlike other browsers, it doesn't affect caret color in IE
    */
  .npm__react-simple-code-editor__textarea {
    color: transparent !important;
  }

  .npm__react-simple-code-editor__textarea::selection {
    background-color: #accef7 !important;
    color: transparent !important;
  }
}
</style></div></pre><p>Some of the differences to the web-version are, that you cannot use the
<span class="Code-sc-1gu2r1r-0 icKMIl">keyframes</span> and <span class="Code-sc-1gu2r1r-0 icKMIl">createGlobalStyle</span> helpers since React Native doesn&#x27;t support
keyframes or global styles. We will also warn you if you use media queries or
nest your CSS.</p><div class="Note-sc-1bk2sh4-0 eXFZrN"><strong class="Note__NoteLabel-sc-1bk2sh4-1 gQVaEe">Note</strong><p>In v2 we support percentages. To make this possible we need to enforce units
for all shorthands. If you&#x27;re migrating to v2,
<a href="https://github.com/styled-components/styled-components-native-code-mod" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener">a codemod is available</a>.</p></div><h3 class="Layout__SubHeader-sc-1s1pjfp-4 bfNrKe Anchor__AnchorHeader-sc-1n6vku9-3 dsUzWQ"><div id="simpler-usage-with-the-metro-bundler" aria-hidden="true" class="Anchor__InvisibleAnchor-sc-1n6vku9-0 gHaVGF"></div>Simpler usage with the metro bundler<a href="#simpler-usage-with-the-metro-bundler" aria-label="simpler-usage-with-the-metro-bundler" class="Anchor-sc-1n6vku9-1 btUpWo"><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW Anchor__AnchorIcon-sc-1n6vku9-2 fRHJnB"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></svg></a></h3><p>If you&#x27;d prefer to just import <span class="Code-sc-1gu2r1r-0 icKMIl">styled-components</span> instead of <span class="Code-sc-1gu2r1r-0 icKMIl">styled-components/native</span>, you can add a <a href="https://facebook.github.io/metro/docs/configuration#resolvermainfields" class="Link__InlineLink-cnbpkq-1 jFBmCj" target="_blank" rel="noopener"><span class="Code-sc-1gu2r1r-0 icKMIl">resolverMainFields</span> configuration</a> that includes <span class="Code-sc-1gu2r1r-0 icKMIl">&quot;react-native&quot;</span>. This used to be supported in metro by default (and currently does work in haul) but appears to have been removed at some point.</p><a href="/docs/advanced" class="NextPage__Wrapper-xdq90t-0 gjGspO"><div><h3 class="NextPage__Text-xdq90t-1 eXUEOB">Continue on the next page</h3><h2 class="NextPage__PageName-xdq90t-2 bcGbnD">Advanced</h2></div><div><svg viewBox="0 0 24 24" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="StyledIconBase-ea9ulj-0 jZGNBW NextPage__Icon-xdq90t-3 gZxZAx"><path fill="none" d="M0 0h24v24H0V0z"></path><path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"></path></svg></div></a></div></div></div></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{}},"page":"/docs/basics","query":{},"buildId":"7lLBOOjj13vVrsc3m2WP3","runtimeConfig":{},"nextExport":true,"autoExport":true,"isFallback":false}</script><script nomodule="" src="/_next/static/chunks/polyfills-0144d5b481bf411d4a2c.js"></script><script src="/_next/static/chunks/main-906ae913d939be95e5a8.js" async=""></script><script src="/_next/static/chunks/webpack-8c819e3ef2df2f5f5aad.js" async=""></script><script src="/_next/static/chunks/framework.27a611b9ebd7be09f176.js" async=""></script><script src="/_next/static/chunks/f0e45107.ed33b3d8b638e86c047c.js" async=""></script><script src="/_next/static/chunks/7fd37b7ba8d84fa41ab70b452111749abe0760ec.a738f1ae2ec5b0a98617.js" async=""></script><script src="/_next/static/chunks/commons.58f3ef812adb022ebd2e.js" async=""></script><script src="/_next/static/chunks/0d90860a103cf89931d2bc2d6e07a2c3f6b99c9e.006752a2318857351bcc.js" async=""></script><script src="/_next/static/chunks/c0c0319fce85c484c3969d97c98e44087d22dadf.0633ede551c57b7672c7.js" async=""></script><script src="/_next/static/chunks/pages/_app-02f83772197561cc5a8e.js" async=""></script><script src="/_next/static/chunks/228173bebd9edef01f5a11e0e3a61673d6df84ea.c83834f07bffa95b84be.js" async=""></script><script src="/_next/static/chunks/591c7b851e9b3983cbe083119af67b84ac2e5cb2.ae642cc967d2816d2a92.js" async=""></script><script src="/_next/static/chunks/pages/docs/basics-ab9802cb7db8391cd6d7.js" async=""></script><script src="/_next/static/7lLBOOjj13vVrsc3m2WP3/_buildManifest.js" async=""></script><script src="/_next/static/7lLBOOjj13vVrsc3m2WP3/_ssgManifest.js" async=""></script><link rel="stylesheet" type="text/css" href="/dmvendor.css"/><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css"/></body></html>